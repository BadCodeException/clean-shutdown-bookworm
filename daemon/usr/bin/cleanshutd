#!/bin/bash

: <<'DISCLAIMER'

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

This script is licensed under the terms of the MIT license.
Unless otherwise noted, code reproduced herein
was written for this script.

- The Pimoroni Crew -

DISCLAIMER

# Checking whether daemon should be active

if [ $(grep "trigger_active" /etc/cleanshutd.conf) == "trigger_active=0" ]; then
    exit 1
else
    daemon="on"
fi

# Assigning values to trigger

if [ -f /etc/cleanshutd.conf ]; then
    pin_value=$(grep "trigger_pin" /etc/cleanshutd.conf | cut -c 13-)
    delay_value=$(grep "trigger_delay" /etc/cleanshutd.conf | cut -c 15-)
    declare -i trigger_pin=$pin_value
    declare -i trigger_delay=$delay_value
else
    declare -i trigger_pin=4
    declare -i trigger_delay=5
fi

# Setting up pin as an input with pullup

if ! command -v raspi-gpio > /dev/null; then
    apt-get update && apt-get install raspi-gpio
fi

raspi-gpio set $trigger_pin ip pu

# Monitoring trigger and calling shutdown

while [ $daemon = "on" ]; do
    if [ $(raspi-gpio get $trigger_pin | grep -c level=0) = 1 ]; then
        echo "BCM $trigger_pin asserted low, system shutdown in $trigger_delay minutes"
        daemon="off" && shutdown -h +$trigger_delay
    fi
done

exit 0
